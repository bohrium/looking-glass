(split<int><gridpair> (many noise) \x1:int ->
(split<int><gridpair> (svrl noise) \x2:int ->
(split<grid><gridpair> (split<grid><grid> (fold<shape><grid> (filter<shape>
      nil<shape>
      \x15:shape -> 
      (snd<nmbrdgrid>
         (pair<nmbrdgrid>
            (repeat<grid> x2 (monochrome x15 cyan) \x16:grid ->
               (paint_sprite
                  (reserve_shape
                     noise
                     x16
                     x15
                     (center x15))
                  (monochrome x15 blue)
                  (pair<cell>
                     (affine
                        zero
                        x1
                        two)
                     x1)))
            x1))) (new_grid x1 x2) \x13:shape ->
   \x14:grid -> 
   (paint_sprite
      (reserve_shape
         noise
         x14
         x13
         (center x13))
      (monochrome x13 cyan)
      (sample_cell noise x14))) \x8:grid ->
(split<cell><grid> (center (silouhette x8)) \x9:cell ->
(fold<nmbrdcolor><grid> (map<int><nmbrdcolor>
      (columns x8)
      \x12:int -> 
      (pair<nmbrdcolor>
         (svrl noise)
         brown)) x8 \x10:nmbrdcolor ->
   \x11:grid -> 
   (paint_cell
      x11
      (snd<ptdgrid>
         (reserve_shape
            noise
            x8
            (silouhette x11)
            x9))
      (cond<color> x1 cyan cyan))))) \x3:grid ->
(split<shape><gridpair> (silouhette x3) \x4:shape ->
(split<shape><gridpair> x4 \x5:shape ->
(split<grid><gridpair> (paint_sprite
   (reserve_shape
      noise
      x3
      x4
      (center x4))
   (monochrome x5 cyan)
   (center x4)) \x6:grid ->
(split<int><gridpair> x2 \x7:int ->
(pair<gridpair> x3 (rotate_grid x3 x7)))))))))