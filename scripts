0
initialize a blank canvas Z   
sample a nonempty subset RR of rows of Z
sample a subset CC of columns of Z
for each R in RR
    sample a pair ctrue, cfalse of distinct colors
    for each column C
       paint Z at (R,C) with ctrue if C is in CC else cfalse
copy Y from Z
copy X from Z
erase the rectangle (min RR+1, min CC+1), (H, W) from X

1
initialize a blank canvas X of shape (>=13) by (>=13)
initialize a blank canvas Y of shape 9 by 9
fill Y with gray
for each king direction (dR, dC):
    sample a color c
    let P be the 3x3 plus sign of color c
    initialize a 3x3 sprite S 
    fill S with gray
    locate the cell (r, c) of S (dR, dC) away from S's center
    paint P with its center on (r,c) onto S, clipping at borders
    paint P onto the (3dR, 3dC) cell from Y's center
    pack and paint P onto X

2
initialize a blank canvas X of shape 3 by 3
initialize a blank canvas Y of shape 3 by 3
paint X with random colors
fill Y with the majority color

3 
initialize a blank canvas Z
copy Y from Z
copy X from Z
sample a few positions PP in Z's grid such that 5x5 sprites therein centered do not overlap or overflow 
sample distinct colors corth, cdiag
let P be the 3x3 plus sign of color corth
paint P's center pixel with cdiag
let S by the 5x5 plus sign of color corth
paint S with the 5x5 times sign of color cdiag
for each PP 
    paint P at PP onto X
    paint S at PP onto Y

4 
initialize a blank canvas Z
sample a cell PP of Z
initialize pen at cell PP of Z
repeat until hit border
    drag up by 2 with color gray
    drag right 2 with color gray
initialize pen at cell PP of Z
repeat until hit border
    drag down by 2 with color gray
    drag left 2 with color gray
paint the cell PP of Z with cyan
copy Y from Z
copy X from Z
erase all gray cells from X

5 
initialize a blank canvas Z 
sample a rectangle from Z of shape at least 3 by 3
draw rectangle's border onto Z in gray
draw rectangle's interior onto Z in cyan
sample an ortho direction DD
sample a cell PP of the rectangle's DD side that is not a corner
initialize pen at cell PP of Z
repeat until hit border
    drag in direction DD with color cyan   
copy Y from Z
copy X from Z
erase all cyan cells from X

6
initialize a blank canvas X of shape 3 by 3
initialize a blank canvas Y of shape 3 by 3
paint X with random colors
for each row R of X
    if row R of X is monochromatic
        paint row R of Y with gray

7
initialize a blank canvas X
initialize a blank canvas Y of same shape
sample a few shapes with unique shape of minimal volume
for each shape S
    pack S onto X with color cyan
    pack S onto Y with color blue if nonminimal else red

8
initialize a blank canvas X
sample a few blocks, each monochromatic, with well-defined plurality
for each block B
    pack B onto X
set Y to the plurality block

9 
initialize a blank canvas X
initialize a blank canvas Y of same shape
sample a subset S of king directions
to each direction in S associate two colors so that all are distinct
for each direction-color (D, c, cc) triple
    paint the D corner of X with C
copy Y from X
sample a color cc distinct from any previous one
until no change in Y
    for each direction-color (D, c, cc) triple
        surround colors c with color cc on Y 
        (if overwrite happened, erase cell)
    for each direction-color (D, cc, c) triple
        surround colors cc with color c on Y
        (if overwrite happened, erase cell)
for each direction-color (D, cc, c) triple
    erase color cc from Y

10
initialize a blank canvas X of shape 11 by 11
initialize a blank canvas Y of shape 11 by 11
fill X with gray
fill Y with gray
initialize a blank grid G of shape 3 by 3
associate to each cell of G a 
    sampled sprite with noise of nonyellow colors and no blanks
sample a cell PPsource of G
sample a cell PPtarget of G
paint the PPtargetth cell of the sprite associated to cell PPsource yellow
for each cell of G at position (dr, dc) from center
    paint the corresponding sprite to position (4dr, 4dc) to X 
    if that cell is PPtarget
        paint the PPsource sprite to PPtarget at Y
        remove the gray pixels from that sprite's rendering onto Y
    else
        erase the 3x3 block at Y

11
initialize a blank canvas Z
sample two distinct cells PPsource PPtarget of Z
initialize a pen at PPsource
until pen is at same row as PPtarget
    drag pen vertically by 1 cell toward PPtarget with yellow
until pen is at same column as PPtarget
    drag pen horizontally by 1 cell toward PPtarget with yellow 
paint PPsource of Z with cyan
paint PPtarget Z with red
copy Y from Z
copy X from Z
erase all yellow cells from X

12
initialize a blank canvas Z
sample a non-red color c
fill Z with dense c noise
sample a few rows and columns of Z
for each:
    paint that row and column with red
copy Y from Z
copy X from Z
erase all red cells from X 

13
initialize a blank canvas Z
sample a non-blue color c
fill Z with dense c noise
copy X from Z
until Y unchanged
    find upperleftmost 3x3 hole in Y
    fill that hole with a blue solid object

14
sample some positive naturals RR all distinct
sample some naturals CC of same length
initialize X, Y to blank canvas of same size, at least (max RR, max CC) in shape
for R,C in RR,CC:
    initialize pen to (0, C)  
    until pen at height R
        drag upward with color gray onto X
with maximum (R,C):
    initialize pen to (0, C)  
    until pen at height R
        drag upward with color blue onto Y
with minimum (R,C):
    initialize pen to (0, C)  
    until pen at height R
        drag upward with color red onto Y

15
initialize X to blank canvas
sample some rectangles on X, with max volume unique
sample a color cbdry
sample a color cnoise
paint sparse noise of color cnoise onto X 
for rectangle R:
    paint R's boundary onto X with color cbrdy
crop max rectangle's coordinates from X onto Y

16
sample a few shapes --- N many
render shapes onto X with color cyan
initialize Y as NxN blank grid
paint Y's backslash as cyan

17
sample a few solid color rectangular blocks
initialize X, Y to equal big shapes
for each shape:
    pack onto bottom of X at position (r, c)
    pack onto Y at position (r+height of shape, c) 

18
sample some 3x3 shape-color pairs
pack onto X
above one pair on X, draw a gray cell
render that shape-color pait onto Y

19
initialize a blank canvas Z
sample a non-green color c
fill Z with dense c noise
sample a few disjoint big rectangles in Z
for each rectangle:
    erase rectangle's boundary and interior from Z
for each rectangle:
    fill rectangle's interior with green
copy Y from Z
copy X from Z
erase green cells from X

20
initialize a blank grid Z of shape 7 by 7 
sample two colors cpetal, ccenter 
sample a 3x3 shape S without center
sample a few cells of Z such that centered 3x3 blocks disjoint
for each cell:
    paint cell with cpetal to Z
for each cell:
    paint S at cell C onto Z with color cpetal 
    if cell is first:
        copy X from Z 
copy Y from Z

21
initialize blank Z of shape L by L
sample nondecreasing pairs 0<=a<=b<L
ensure first a=b and last a=b
for a,b ith element of that list:
    initialize pen at (0,i) 
    until pen at height a
        drag upward by 1 with color cyan
    initialize pen at (L-1,i) 
    until pen at height a-1
        drag downward by 1 with color red
copy X from Z
color all widest rectangles that fit in remaining green
color all tallest rectangles that fit in remaining green
copy Y from Z

22
sample a few point-color pairs with distinct rows

