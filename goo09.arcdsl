(split<int><gridpair> (many noise) \x1:int ->
(split<color><gridpair> (rainbow noise) \x2:color ->
(split<int><gridpair> (height<shape> small_plus) \x3:int ->
(split<grid><gridpair> (split<grid><grid> (fold<shape><grid> (filter<shape>
      (repeat<{shape}> x1 nil<shape> \x11:{shape} ->
         (add<shape>
            x11
            (gen_shape noise x1)))
      \x10:shape -> (afew noise)) (new_grid x1 x1) \x8:shape ->
   \x9:grid -> 
   (paint_sprite
      (pair<ptdgrid>
         x9
         (pair<cell> x1 x1))
      (monochrome x8 x2)
      (pair<cell>
         (affine
            zero
            x1
            (width<shape> x8))
         x1))) \x7:grid ->
(paint_cell
   x7
   (snd<ptdgrid>
      (reserve_shape
         noise
         x7
         (silouhette x7)
         (pair<cell>
            (affine zero x1 two)
            x3)))
   x2)) \x4:grid ->
(fold<int><gridpair> (rows x4) (pair<gridpair> x4 x4) \x5:int ->
   \x6:gridpair -> 
   (cond<gridpair>
      x3
      (pair<gridpair>
         (paint_row
            (snd<gridpair> x6)
            x3
            x2)
         (paint_row
            x4
            x1
            (rainbow noise)))
      (cond<gridpair>
         x3
         (pair<gridpair>
            (paint_row x4 x3 gray)
            (paint_row
               (fst<gridpair> x6)
               x5
               x2))
         x6)))))))